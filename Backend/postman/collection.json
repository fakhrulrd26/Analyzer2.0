{
	"info": {
		"_postman_id": "0a106a82-06ed-4495-825a-586848bb40a5",
		"name": "filesignature",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27880962"
	},
	"item": [
		{
			"name": "user",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code harus 201', ()=> pm.response.to.have.status(201))\r",
									"\r",
									"pm.test"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/users/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/users/{{username}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"users",
								"{{username}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json()\r",
									"pm.environment.set('accessToken', response.data.accessToken)\r",
									"pm.environment.set('refreshToken', response.data.refreshToken)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update info (needs auth)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code harus 204', ()=> pm.response.to.have.status(204))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"slimy v2\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/users/{{username}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"users",
								"{{username}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code harus 200', ()=> pm.response.to.have.status(200))\r",
									"\r",
									"const response= pm.response.json()\r",
									"\r",
									"pm.environment.set('accessToken', response.data.accessToken)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"refreshToken\": \"{{refreshToken}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/users/refresh-token",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"users",
								"refresh-token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout (needs auth)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/users/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"users",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code harus 204', ()=> pm.response.to.have.status(204))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/users/{{username}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"users",
								"{{username}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "mime",
			"item": [
				{
					"name": "list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/mimes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"mimes"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json()\r",
									"\r",
									"pm.environment.set('mimeId', response.data.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"application/pdf\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/mimes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"mimes"
							]
						}
					},
					"response": []
				},
				{
					"name": "find with id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/mimes/{{mimeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"mimes",
								"{{mimeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update where id",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"json\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/mimes/{{mimeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"mimes",
								"{{mimeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete where id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/mimes/{{mimeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"mimes",
								"{{mimeId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "extension",
			"item": [
				{
					"name": "pre",
					"item": [
						{
							"name": "create mime",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json()\r",
											"\r",
											"pm.environment.set('mimeId', response.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"application/pdf\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{port}}/api/v1/mimes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"mimes"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/extensions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json()\r",
									"\r",
									"pm.environment.set('extensionId', response.data.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"pdf\",\r\n    \"mime_id\": {{mimeId}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/extensions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "find with id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/extensions/{{extensionId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"extensions",
								"{{extensionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update where id",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"json\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/extensions/{{extensionId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"extensions",
								"{{extensionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete where id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/extensions/{{extensionId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"extensions",
								"{{extensionId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "signature",
			"item": [
				{
					"name": "pre",
					"item": [
						{
							"name": "create extension",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json()\r",
											"\r",
											"pm.environment.set('extensionId', response.data.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"pdf\",\r\n    \"mime_id\": {{mimeId}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{port}}/api/v1/extensions",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v1",
										"extensions"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/signatures",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"signatures"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json()\r",
									"\r",
									"pm.environment.set('signatureId', response.data.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"offset\": 0,\r\n    \"hex\": \"fa00\",\r\n    \"extension_id\": {{extensionId}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/signatures",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"signatures"
							]
						}
					},
					"response": []
				},
				{
					"name": "find with id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/signatures/{{signatureId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"signatures",
								"{{signatureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update where id",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"offset\": 69\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/signatures/{{signatureId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"signatures",
								"{{signatureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete where id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/signatures/{{signatureId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"signatures",
								"{{signatureId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "file-scanner",
			"item": [
				{
					"name": "scan files",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "files",
									"type": "file",
									"src": [
										"/C:/Users/Office/Documents/README_2019.txt",
										"/C:/Users/Office/Documents/laporan kp.pptx"
									]
								}
							]
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/v1/services/file-scanner",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"services",
								"file-scanner"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}